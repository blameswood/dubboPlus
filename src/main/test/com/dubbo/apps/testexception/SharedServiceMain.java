/**
 * Autogenerated by Thrift Compiler (0.8.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.dubbo.apps.testexception;

import java.util.concurrent.atomic.AtomicInteger;

import org.apache.thrift.TException;
import org.apache.thrift.protocol.TBinaryProtocol;
import org.apache.thrift.protocol.TProtocol;
import org.apache.thrift.transport.TSocket;
import org.apache.thrift.transport.TTransport;
import org.apache.thrift.transport.TTransportException;

public class SharedServiceMain {

	private static final AtomicInteger THRIFT_SEQ_ID = new AtomicInteger( 0 );
	
	public static void main(String args[]) {

		

		for (int i = 0; i < 10; i++) {

			new Thread(new Runnable() {

				public void run() {
					System.out.println("开始远程调用");
					TTransport transport = null;

					try {
						transport = new TSocket("localhost", 20003,5*1000);
						transport.open();
						TProtocol protocol = new TBinaryProtocol(transport);
						
						SharedService.Client client = new SharedService.Client(protocol);
						

						for (int j = 0; j < 10; j++) {
							int uid = THRIFT_SEQ_ID.getAndIncrement();
							
							client.getStruct(4, "@哈哈！！");
							System.out.println(uid+">返回： " + client.getStruct2(2, uid+"#哈哈！！"));
						}
						
					} catch (TTransportException e) {
						System.out.println("TTransportException:"+e.getMessage());
						e.printStackTrace();
					} catch (TException e) {
						System.out.println("TException:"+e.getMessage());
						e.printStackTrace();
					} finally {
						if (transport != null && transport.isOpen())
							transport.close();
					}

					System.out.println("结束远程调用");
					
				}

			}).start();

		}

		
	}

}
